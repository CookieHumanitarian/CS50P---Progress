#1. Had a bit of practice importing a module and reading its documentation. Here I just had to implement a module that will convert text to emojis

import emoji


def main():
    text = input("Emoji: ")
    emo = emoji.emojize(text)
    print("Output:", emo)


main()

#2. Used a random font generator and output fonts depending on the number of CLA

from pyfiglet import Figlet
import sys
import random


def main():
    figlet = Figlet()
    fonts = figlet.getFonts()

    # Makes sure CLA is either 0 or 2
    while True:
        if len(sys.argv) != 3 and len(sys.argv) != 1:
            sys.exit("Input correct number of CLA")

        # Checks whether CLA is valid
        if len(sys.argv) == 3:
            if sys.argv[2] not in fonts:
                sys.exit("NO FONT EXISTS")

            if sys.argv[1] == "-f" or sys.argv[1] == "--font":
                break
            else:
                sys.exit("FONT")

        if len(sys.argv) == 1:
            break

    text = input("Input: ")

    if len(sys.argv) == 3:
        figlet.setFont(font=sys.argv[2])
        print(figlet.renderText(text))

    elif len(sys.argv) == 1:
        f = random.choice(fonts)
        figlet.setFont(font=f)
        print(figlet.renderText(text))


main()

#3. Learnt to join strings using the inflection module

import inflect

def main():
    p = inflect.engine()
    text = []
    while True:
        try:
            word = input("Name: ")
            text.append(word)
        except EOFError:
            print()
            break

    print("Adieu, adieu, to ", end='')
    string = p.join(text)
    print(string)


main()

#4. Had to create a program where a user has to guess a number within a range they set

import random

def main():
    while True:
        try:
            level = int(input("Level: "))
            goal = random.randint(1, level)
        except ValueError:
            pass
        else:
            break

    while True:
        try:
            check = int(input("Guess: "))
            if check > goal:
                print("Too large!")
            elif check < goal:
                print("Too small!")
            else:
                print("Just right!")
                break
        except (EOFError, ValueError):
            pass

main()

#5. Had to create a small game where user will input a difficulty and a series of 10 arithmetic questions will randomly appear depending on the level.

import random

def main():
    level = get_level()
    score = 0

    # Prints 10 auestions
    for _ in range(10):
        incorrect = 0
        x, y = generate_integer(level)
        solution = x + y

        try:
            answer = int(input(f"{x} + {y} = "))
            if answer == solution:
                score += 1
            else:
                incorrect += 1
                print("EEE")

        except (ValueError, EOFError):
            print("EEE")

        if incorrect > 0:
            while True:
                answer = input(f"{x} + {y} = ")
                try:
                    if int(answer) == solution:
                        score += 1
                        break
                    else:
                        incorrect += 1
                        if incorrect == 3:
                            print("Solution:", solution)
                            break
                except EOFError:
                    incorrect += 1
                    if incorrect == 3:
                        print("Solution:", solution)
                        break
                    pass

    print("Score:", score)


def get_level():
    while True:
        try:
            level = int(input("Level: "))
            if level < 1 or level > 3:
                raise ValueError
        except (EOFError, ValueError):
            pass
        else:
            break

    return level


def generate_integer(level):
    if level == 1:
        x = random.randint(0, 9)
        y = random.randint(0, 9)
    elif level == 2:
        x = random.randint(10, 99)
        y = random.randint(10, 99)
    else:
        x = random.randint(100, 999)
        y = random.randint(100, 999)

    return x, y


if __name__ == "__main__":
    main()

#6. Had to find out the price of bitcoin from the Coinbase API and output the price of bitcoin multipled by the number the user inputs. Quite fun
# to finally have a bit of practise with APIs

import requests
import sys
import json


def main():
    # Checks user input
    if len(sys.argv) != 2:
        sys.exit("Too few CLA")
    try:
        number = float(sys.argv[1])
    except ValueError:
        sys.exit("CLA must be converted to a float")

    try:
        response = requests.get("https://api.coindesk.com/v1/bpi/currentprice.json")

    except requests.RequestException:
        print("Request failed")

    key = response.json()
    price = key["bpi"]["USD"]["rate_float"]
    total = number * float(price)

    print(f"${total:,.4f}")


main()


