# Had to convert a date a user inputs to seconds for the current date. One of the worst assignements in terms of passing the check as it contradicts what
# is stated in the instructions. Nightmare.


#prompt user for date and print out how many minutes it has been since then
#assume that the time stays the same at midnight 00:00
#check for invalid input
#Use inflect.py to join words in output in class

from datetime import date, timedelta, datetime
import sys
import inflect

p = inflect.engine()

def check(u_input):
    try:
        year, month, day = u_input.split("-")
    except ValueError:
        sys.exit("Input Proper Format")

    if int(month) < 1 or int(month) > 12:
        sys.exit("Wrong month")
    if int(day) < 1 or int(day) > 31:
        sys.exit("Wrong day")


    u_input = date(int(year), int(month), int(day))
    today = date.today()

    lapse = u_input - today
    seconds = timedelta.total_seconds(lapse)
    unrounded = int(seconds) / 60
    rounded = abs(round(int(unrounded)))
    min = p.number_to_words(rounded, andword='')
    return f"{min.capitalize()} minutes"



def main():
    print(get_input())

def get_input():
    u_input = input("Date of Birth: ")
    return check(u_input)




if __name__ == "__main__":
    main()


#2. Had to implement a class take takes in subtraction and addition
class Jar:
    def __init__(self, capacity=12):
        if capacity < 0:
            raise ValueError

        self._capacity = capacity
        self._size = 0

    def __str__(self):
        return '🍪' * self._size

    def deposit(self, n):
        self._size = self._size + n
        if self._size > self._capacity:
            raise ValueError

    def withdraw(self, n):
        if self._size < n:
            raise ValueError
        self._size = self._size - n


    @property
    def capacity(self):
        return self._capacity

    @property
    def size(self):
        return self._size

#3. A bit of work with the FPDF package to print out a name on a shirt

from fpdf import FPDF

class Shirt():
    def __init__(self, name):
        self._pdf = FPDF()
        self._pdf.add_page()

        self._pdf.set_font("helvetica", "B", 50)
        self._pdf.cell(0, 60, "CS50 Shirtificate", new_x="LMARGIN", new_y="NEXT", align="C")
        self._pdf.image("shirtificate.png", w=self._pdf.epw)
        self._pdf.set_font_size(30)
        self._pdf.set_text_color(255, 255, 255)
        self._pdf.text (x=47.5, y=140, txt=f" {name} took CS50")

    def save(self, name):
        self._pdf.output(name)


def main():
    name = input("Name: ")
    shirt = Shirt(name)
    shirt.save("shirtificate.pdf")


main()

